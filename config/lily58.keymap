/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        to_layer_3 {
            bindings = <&mo 2>;
            key-positions = <52 55>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            label = "Base";
            bindings = <
&kp GRAVE      &kp N1          &kp N2          &kp N3       &kp N4            &kp N5                              &kp N6  &kp N7             &kp N8       &kp N9           &kp N0                   &key_repeat
&kp TAB        &kp Q           &kp W           &kp E        &kp R             &kp T                               &kp Y   &kp U              &kp I        &kp O            &kp P                    &mt RIGHT_BRACKET LEFT_BRACKET
&kp BACKSLASH  &mt LEFT_ALT A  &mt LEFT_GUI S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G                               &kp H   &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RIGHT_GUI L  &mt RIGHT_ALT SEMICOLON  &kp SQT
&kp LSHFT      &kp Z           &mt LC(X) X     &mt LC(C) C  &mt LC(V) V       &kp B   &caps_word    &kp RA(RBKT)  &kp N   &kp M              &kp COMMA    &kp DOT          &kp FSLH                 &kp RSHFT
                                               &mo 5        &kp DELETE        &mo 1   &kp ENTER     &kp SPACE     &mo 2   &kp BSPC           &tog 4
            >;
        };

        Numbers {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "numbers";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &kp GRAVE     &kp LS(N4)  &kp SLASH  &kp ASTERISK  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp LS(RPAR)  &kp N7      &kp N8     &kp N9        &kp MINUS  &kp RA(RBKT)
&trans  &trans  &trans  &trans  &trans  &trans                    &kp LS(LPAR)  &kp N4      &kp N5     &kp N6        &kp PLUS   &kp RA(LBKT)
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &kp N1      &kp N2     &kp NUMBER_3  &trans     &trans
                        &trans  &trans  &trans  &trans    &trans  &trans        &kp N0      &trans
            >;
        };

        Symbols {
            bindings = <
&trans            &trans       &trans         &trans         &trans           &trans                               &trans  &trans  &trans  &trans  &trans  &trans
&kp PERCENT       &kp LS(SQT)  &kp RBRC       &kp RBKT       &kp LS(RPAR)     &kp LS(DQT)                          &trans  &trans  &trans  &trans  &trans  &trans
&kp RS(NUMBER_4)  &kp LS(SQT)  &kp LBRC       &kp LBKT       &kp LS(LPAR)     &kp LS(DQT)                          &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans       &kp RA(GRAVE)  &kp RS(GRAVE)  &kp RS(N3)       &trans       &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans         &kp EXCLAMATION  &trans       &kp QUESTION    &trans  &trans  &trans  &trans
            >;

            label = "symbols";
        };

        Movement {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "movement";
            bindings = <
&kp F1  &kp F2    &kp F3     &kp F4    &kp F5     &kp F6                     &kp F7    &kp F8     &kp F9     &kp F10    &kp F11  &kp F12
&trans  &trans    &kp PG_DN  &kp UP    &kp PG_UP  &trans                     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans   &trans
&trans  &kp HOME  &kp LEFT   &kp DOWN  &kp RIGHT  &kp END                    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans   &trans
&trans  &trans    &trans     &trans    &trans     &trans   &trans    &trans  &trans    &trans     &trans     &trans     &trans   &trans
                             &trans    &trans     &trans   &trans    &trans  &trans    &trans     &trans
            >;
        };

        Mouse {
            bindings = <
&trans  &trans            &trans            &trans          &trans           &trans                               &trans    &trans    &trans    &trans    &trans    &trans
&trans  &trans            &mwh SCROLL_DOWN  &mmv MOVE_UP    &mwh SCROLL_UP   &trans                               &trans    &trans    &trans    &trans    &trans    &trans
&trans  &mwh SCROLL_LEFT  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mwh SCROLL_RIGHT                    &mkp MB4  &mkp MB1  &mkp MB2  &mkp MB3  &mkp MB5  &trans
&trans  &trans            &trans            &trans          &trans           &trans             &trans    &trans  &trans    &trans    &trans    &trans    &trans    &trans
                                            &trans          &trans           &trans             &trans    &trans  &trans    &trans    &trans
            >;

            label = "mouse";
        };

        Other {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans          &trans            &trans         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans          &trans            &trans         &trans  &kp KP_NUMLOCK
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp K_PREVIOUS  &kp K_PLAY_PAUSE  &kp K_FORWARD  &trans  &kp SCROLLLOCK
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp C_VOL_DN    &kp K_MUTE        &kp C_VOL_UP   &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans          &trans
            >;

            label = "other";
        };
    };
};
