/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
};

/ {
    combos {
        compatible = "zmk,combos";

        to_layer_3 {
            bindings = <&mo 2>;
            key-positions = <52 55>;
            layers = <0 2 3>;
        };

        escape_dual_keypress {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&kp GRAVE      &kp N1          &kp N2          &kp N3       &kp N4            &kp N5                            &kp N6  &kp N7             &kp N8       &kp N9           &kp N0                   &key_repeat
&kp TAB        &kp Q           &kp W           &kp E        &kp R             &kp T                             &kp Y   &kp U              &kp I        &kp O            &kp P                    &mt RIGHT_BRACKET LEFT_BRACKET
&kp BACKSLASH  &mt LEFT_ALT A  &mt LEFT_GUI S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G                             &kp H   &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RIGHT_GUI L  &mt RIGHT_ALT SEMICOLON  &kp SQT
&kp LSHFT      &kp Z           &mt LC(X) X     &mt LC(C) C  &mt LC(V) V       &kp B   &caps_word    &kp ESCAPE  &kp N   &kp M              &kp COMMA    &kp DOT          &kp FSLH                 &kp RSHFT
                                               &mo 4        &kp BACKSPACE     &mo 1   &kp ENTER     &kp SPACE   &mo 2   &kp DELETE         &mo 5
            >;
        };

        Numbers {
            label = "numbers";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &kp GRAVE     &kp LS(N4)  &kp SLASH  &kp ASTERISK  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp LS(RPAR)  &kp N7      &kp N8     &kp N9        &kp MINUS  &kp RA(RBKT)
&trans  &trans  &trans  &trans  &trans  &trans                    &kp LS(LPAR)  &kp N4      &kp N5     &kp N6        &kp PLUS   &kp RA(LBKT)
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &kp N1      &kp N2     &kp NUMBER_3  &kp EQUAL  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans        &kp N0      &trans
            >;
        };

        Symbols {
            label = "symbols";
            bindings = <
&trans            &trans       &trans         &trans         &trans           &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&kp PERCENT       &kp LS(SQT)  &kp RBRC       &kp RBKT       &kp LS(RPAR)     &kp LS(DQT)                             &trans  &trans  &trans  &trans  &trans  &trans
&kp RS(NUMBER_4)  &kp LS(SQT)  &kp LBRC       &kp LBKT       &kp LS(LPAR)     &kp LS(DQT)                             &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans       &kp RA(GRAVE)  &kp RS(GRAVE)  &kp RS(N3)       &kp UNDERSCORE  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans         &kp EXCLAMATION  &trans          &kp QUESTION    &trans  &trans  &trans  &trans
            >;
        };

        Movement {
            label = "movement";
            bindings = <
&kp F1  &kp F2    &kp F3     &kp F4    &kp F5     &kp F6                     &kp F7    &kp F8     &kp F9     &kp F10    &kp F11  &kp F12
&trans  &trans    &kp PG_DN  &kp UP    &kp PG_UP  &trans                     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans   &trans
&trans  &kp HOME  &kp LEFT   &kp DOWN  &kp RIGHT  &kp END                    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans   &trans
&trans  &trans    &trans     &trans    &trans     &trans   &trans    &trans  &trans    &trans     &trans     &trans     &trans   &trans
                             &trans    &trans     &trans   &trans    &trans  &trans    &trans     &trans
            >;
        };

        //        Mouse {
        //            label = "mouse";
        //            bindings = <
        //&trans  &trans            &trans            &trans          &trans           &trans                               &trans    &trans    &trans    &trans    &trans    &trans
        //&trans  &trans            &mwh SCROLL_DOWN  &mmv MOVE_UP    &mwh SCROLL_UP   &trans                               &trans    &trans    &trans    &trans    &trans    &trans
        //&trans  &mwh SCROLL_LEFT  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mwh SCROLL_RIGHT                    &mkp MB4  &mkp MB1  &mkp MB2  &mkp MB3  &mkp MB5  &trans
        //&trans  &trans            &trans            &trans          &trans           &trans             &trans    &trans  &trans    &trans    &trans    &trans    &trans    &trans
        //                                            &trans          &trans           &trans             &trans    &trans  &trans    &trans    &trans
        //            >;
        //        };

        Other {
            label = "other";
            bindings = <
&bt BT_CLR    &trans        &trans        &trans        &trans        &trans                    &trans  &trans          &trans            &trans         &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans                    &trans  &trans          &trans            &trans         &trans  &kp KP_NUMLOCK
&bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans                    &trans  &kp K_PREVIOUS  &kp K_PLAY_PAUSE  &kp K_FORWARD  &trans  &kp SCROLLLOCK
&trans        &trans        &trans        &trans        &trans        &trans  &trans    &trans  &trans  &kp C_VOL_DN    &kp K_MUTE        &kp C_VOL_UP   &trans  &trans
                                          &trans        &trans        &trans  &trans    &trans  &trans  &trans          &trans
            >;
        };

        Gaming {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &tog 6  &tog 7  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;

            label = "Gaming";
        };

        FPS {
            bindings = <
&kp ESC    &kp N1     &kp N2  &kp N3     &kp N4    &kp N5                          &trans  &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &kp TAB    &kp Q   &kp W      &kp E     &kp R                           &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp CAPS   &kp A   &kp S      &kp D     &kp F                           &trans  &trans  &trans  &trans  &trans  &trans
&kp LALT   &kp LSHFT  &kp Z   &kp X      &kp C     &kp V      &kp G        &trans  &trans  &trans  &trans  &trans  &trans  &trans
                              &kp LCTRL  &kp LALT  &kp LCTRL  &kp SPACE    &trans  &trans  &trans  &to 0
            >;

            label = "FPS";
        };

        POE {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4    &kp N5                          &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp Q   &kp W   &kp E   &kp R     &kp T                           &trans  &trans  &trans  &trans  &trans  &trans
&kp CAPS   &kp A   &kp S   &kp D   &kp F     &kp G                           &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V     &kp B      &kp H        &trans  &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &kp LALT  &kp LCTRL  &kp SPACE    &trans  &trans  &trans  &to 0
            >;

            label = "POE";
        };
    };
};
